Q1:
SELECT f1.uid, COUNT(f2.uid) num
FROM
(SELECT a.friendId AS uid
FROM friendList a JOIN friendList b
ON a.friendId = b.uid
WHERE a.uid = b.friendId AND a.uid = "%s")  f JOIN friendList f2   ON (f2.uid = f.uid)
JOIN friendList f1 ON (f1.friendId = f2.uid) 
WHERE  f1.friendID = f2.uid AND
f1.uid = f2.friendId AND
f1.uid!="%s" AND
f1.uid!=f.uid
GROUP BY f1.uid
ORDER BY num DESC ;

Q2:

SELECT  followers.uid, count(followers.uid) as num FROM
(SELECT friendID FROM friendList
WHERE uid = "%s")  friends LEFT OUTER JOIN 
(SELECT f1.uid, f1.friendID
FROM 
(SELECT friendID
FROM friendList
WHERE uid = "%s") f2 JOIN friendList f1 ON (f1.friendID = f2.friendID )
WHERE f1.uid != "%s") followers ON (followers.uid = friends.friendID )
where friends.friendID is null GROUP BY followers.uid ORDER BY num DESC LIMIT 10;

Q3:
SELECT f.friendID
FROM
(SELECT f.friendID
FROM friendList LEFT OUTER JOIN
(SELECT friendID
FROM friendlist
WHERE uid = "%s") friends ON (friendlist.uid = friends.friendID)
WHERE friends.friendID is not null) f LEFTER OUTER JOIN
(SELECT friendID
FROM friendList
WHERE uid = "%s") friends ON (f.friendID = friends.friendID)
WHERE f.friendID <> "%s" AND
friends.friendID is null
GROUP BY f.friendID
ORDER BY COUNT(f.uid)DESC
LIMIT 10;


Q4:
SELECT DISTINCT f1.friendID
FROM
(SELECT friendIDFROM friendList
WHERE uid = "A")  f1 JOIN
(SELECT friendID
FROM friendList
WHERE uid = "B")  f2
ON(f1.friendID = f2.friendID);


Q5:
SELECT uid
FROM friendList LEFT OUTER JOIN 
(SELECT friendID
FROM friendList AS a
WHERE a.uid = "A") friends ON (friendList.uid = friends.friendID)
WHERE friendID = "B"AND
friends.friendID is not null;

Q6:
SELECT microblog.uid
FROM microblog JOIN mention ON(microblog.mid = mention.mid)
JOIN (SELECT DISTINCT mention.uid AS uid
FROM microblog JOIN mention ON (microblog.mid = mention.mid)
WHERE  microblog.uid = "A") AS x 
ON (mention.uid = x.uid)
WHERE microblog.uid<> "A" AND
microblog.time BETWEEN TO_DAYS('YYYY-MM-DDHH:MM:SS')
AND DATE_ADD('YYYY-MM-DD HH:MM:SS',INTERVAL 1HOUR)
GROUP BY microblog.uid
ORDER BY COUNT(mention.uid) DESC
LIMIT 10;

Q7:
SELECT mention.uid
FROM microblog JOIN mention ON (microblog.mid = mention.mid)
WHERE microblog.time BETWEEN TO_DAYS('YYYY-MM-DDHH:MM:SS')
AND DATE_ADD('YYYY-MM-DD HH:MM:SS',INTERVAL 1HOUR)
GROUP BY mention.uid
ORDER BY COUNT(*)DESC
LIMIT 10;


Q8:
SELECT mid
FROM microblog LEFT OUTER JOIN
((SELECT friendID
FROM friendList
WHERE uid = "A") UNION
(SELECT b.friendID as friendID
FROM friendList a join friendList b
ON (a.friendID = b.uid)
WHERE a.uid = "A" )) friends
ON (microblog.uid in friends.friendID)
WHERE friends.friendID is not null
ORDER BY microblog.time DESC
LIMIT 10;

Q9:
SELECT microblog.uid
FROM microblog JOIN event ON (microblog.mid = event.mid) 
LEFT OUTER JOIN ((SELECT friendID
FROM friendList
WHERE uid = "A") UNION
(SELECT b.friendID as friendID
FROM friendList a join friendList b
WHERE a.uid = "A" a.friendID = b.uid)) friends on (microblog.uid= friends.friendID)
WHERE
event.tag = "?" AND 
friends.friendID is not null AND 
microblog.time BETWEEN TO_DAYS('YYYY-MM-DDHH:MM:SS') AND 
DATE_ADD('YYYY-MM-DD HH:MM:SS',INTERVAL 1HOUR)GROUP BY microblog.uid
ORDER BY COUNT(*)DESC
LIMIT 10;

Q10:

SELECT x.reuid,COUNT(*) 
FROM microblog JOIN
(SELECT retweet.mid as mid, microblog.uid as reuid
FROM microblog JOIN retweet ON (microblog.mid = retweet.remid)) x
ON (microblog.mid = x.mid)
WHERE
microblog.time BETWEEN TO_DAYS('YYYY-MM-DD HH:MM:SS')
AND DATE_ADD('YYYY-MM-DD HH:MM:SS', INTERVAL 1HOUR)
GROUP BY x.reuid
ORDER BY num DESC
LIMIT 10;

Q11:
SELECT microblog.uid, COUNT(*) num
FROM microblog JOIN
(SELECT retweet.mid as mid,microblog.uid as reuid
FROM microblog JOIN retweet
ON (microblog.mid = retweet.remid)) x 
ON (microblog.mid = x.mid)
WHERE 
x.reuid = "A" AND
microblog.time BETWEEN TO_DAYS('YYYY-MM-DDHH:MM:SS')
AND DATE_ADD('YYYY-MM-DD HH:MM:SS',INTERVAL 1HOUR)
GROUP BY microblog.uid
ORDER BY num DESC
LIMIT 10;

Q12:
SELECT x.remid, COUNT(*) num
FROM microblog JOIN
(SELECT retweet.mid AS mid,retweet.remid AS remid
FROM microblog,retweet
WHERE microblog.mid = retweet.remid) x ON (microblog.mid = x.mid )
LEFT OUTER JOIN ((SELECT friendID
FROM friendList
WHERE uid = "A") UNION
(SELECT b.friendID as friendID
FROM friendList a join friendList b
WHERE a.uid = "A" a.friendID = b.uid)) friends ON  (microblog.uid = friends.friendID)
WHERE
friends.friendID is not null AND 
microblog.time BETWEEN TO_DAYS('YYYY-MM-DDHH:MM:SS')
AND DATE_ADD('YYYY-MM-DD HH:MM:SS',INTERVAL 1HOUR)
GROUP BY x.remid
ORDER BY num DESC
LIMIT 10;

Q13:
SELECT microblog.uid
FROM microblog JOIN event ON (microblog.mid = event.mid)
LEFT OUTER JOIN (SELECT DISTINCT tag
FROM event,microblog
WHERE microblog.mid = event.mid AND
microblog.uid = "A") atags ON (event.tag = atags.tag)
LEFT OUTER JOIN (SELECT friendID
FROM friendList
WHERE uid = "A") afriends ON (microblog.uid = afriends.uid)
WHERE
microblog.uid<> "A" AND
atags is not null AND
afriends.uid is null AND
microblog.time BETWEEN TO_DAYS('YYYY-MM-DD HH:MM:SS')
AND DATE_ADD('YYYY-MM-DD HH:MM:SS', INTERVAL 1HOUR)
GROUP BY microblog.uid
ORDER BY COUNT(event.tag)DESC
LIMIT 10;

Q14:
SELECT event.tag,COUNT(*) num
FROM microblog JOIN event
ON (microblog.mid = event.mid)
WHERE 
microblog.time BETWEEN TO_DAYS('YYYY-MM-DD HH:MM:SS)
AND DATE_ADD('YYYY-MM-DD HH:MM:SS', INTERVAL 1HOUR)
GROUP BY event.tag
ORDER BY num DESC
LIMIT 10;

Q15:
SELECT microblog.uid
FROM microblog JOIN event
ON (microblog.mid = event.mid)
WHERE
event.tag="?" AND
microblog.time BETWEEN TO_DAYS('YYYY-MM-DDHH:MM:SS')
AND DATE_ADD('YYYY-MM-DD HH:MM:SS',INTERVAL 1HOUR)
GROUP BY microblog.uid
ORDER BY COUNT(*)DESC
LIMIT 10;

Q16:
SELECT x.reuid,COUNT(*) num
FROM microblog JOIN
(SELECT retweet.mid as mid,microblog.uid as reuid
FROM microblog JOIN retweet
ON(microblog.mid = retweet.remid)) x
ON ( microblog.mid = x.mid) LEFT OUTER JOIN
(SELECT friendID
FROM friendList
WHERE uid = "A") afriends ON (microblog.uid = afriends.friendID)
WHERE
afriends.friendID is not null
 AND
microblog.time BETWEEN TO_DAYS('YYYY-MM-DD HH:MM:SS')
AND DATE_ADD('YYYY-MM-DD HH:MM:SSâ€™,INTERVAL 1HOUR)
GROUP BY x.reuid
ORDER BY num DESC
LIMIT 10;

Q17:
SELECT mention.uid,COUNT(*) num
FROM microblog JOIN mention ON (microblog.mid = mention.mid)
LEFT OUTER JOIN
(SELECT friendID
FROM friendList
WHERE uid = "A") afriends ON (microblog.uid = afriends.friendID)
WHERE 
afriends.friendID is not null AND
microblog.time BETWEEN TO_DAYS('YYYY-MM-DDHH:MM:SS')
AND DATE_ADD('YYYY-MM-DD HH:MM:SS',INTERVAL 1HOUR)
GROUP BY mention.uid
ORDER BY num DESC
LIMIT 10;

Q18:
SELECT mention.uid,COUNT(*) num
FROM microblog JOIN mention ON (microblog.mid = mention.mid)
LEFT OUTER JOIN (SELECT uid
FROM friendList
WHERE friendID = "A") afans ON (microblog.uid = afans.uid)
WHERE
mention.uid="A" AND
afans.uid is not null AND
microblog.time BETWEEN TO_DAYS('YYYY-MM-DD HH:MM:SS')
AND DATE_ADD('YYYY-MM-DD HH:MM:SS', INTERVAL 1HOUR)
GROUP BY mention.uid
ORDER BY num DESC
LIMIT 10;

Q19:
SELECT event.tag,COUNT(*) num
FROM microblog JOIN event ON ( microblog.mid = event.mid)
LEFT OUTER JOIN ((SELECT friendID
FROM friendList
WHERE uid = "A") UNION
(SELECT b.friendID as friendID
FROM friendList a join friendList b
WHERE a.uid = "A" a.friendID = b.uid)) friends ON (microblog.uid = friends.friendID)
WHERE 
microblog.uid<> "A" AND
friends.friendID is not null AND
microblog.time BETWEEN TO_DAYS('YYYY-MM-DD HH:MM:SS')
AND DATE_ADD('YYYY-MM-DD HH:MM:SS', INTERVAL 1HOUR)
GROUP BY event.tag
ORDER BY num DESC
LIMIT 10;